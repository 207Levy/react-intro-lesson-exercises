{"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":1,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":4,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1556431889268,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › The first div should say, Tesla makes 140 every year\u001b[39m\u001b[22m\n\n    There should be a div with an id of 'Tesla'. Did you forget a `return` in your array method?__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 | \u001b[39m          \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m          let teslaDiv \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[32m'#Tesla'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 19 | \u001b[39m          expect(teslaDiv\u001b[33m.\u001b[39mexists()\u001b[33m,\u001b[39m \u001b[32m\"There should be a div with an id of 'Tesla'. Did you forget a `return` in your array method?\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                                                                    \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m          let teslaText \u001b[33m=\u001b[39m teslaDiv\u001b[33m.\u001b[39mtext()\u001b[33m.\u001b[39mtrim()\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m          expect(teslaText\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m,\u001b[39m \u001b[32m`The text should read '${EXPECTED_TEXT}'. Instead we found '${teslaText}'`\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[33mEXPECTED_TEXT\u001b[39m\u001b[33m.\u001b[39mtoLowerCase())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m      })\u001b[33m;\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:19:133)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › The second div should say, Microsoft makes 300 every year\u001b[39m\u001b[22m\n\n    There should be a div with an id of 'Microsoft'__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m          \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m        let microsoftDiv \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[32m'#Microsoft'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 27 | \u001b[39m        expect(microsoftDiv\u001b[33m.\u001b[39mexists()\u001b[33m,\u001b[39m \u001b[32m\"There should be a div with an id of 'Microsoft'\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m        let microsoftText \u001b[33m=\u001b[39m microsoftDiv\u001b[33m.\u001b[39mtext()\u001b[33m.\u001b[39mtrim()\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        expect(microsoftText\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m,\u001b[39m \u001b[32m`The text should read '${EXPECTED_TEXT}'. Instead we found ${microsoftText}`\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[33mEXPECTED_TEXT\u001b[39m\u001b[33m.\u001b[39mtoLowerCase())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:27:90)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › The third div should say, Google makes 600 every year\u001b[39m\u001b[22m\n\n    There should be a div with an id of 'Google'__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        let googleDiv \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[32m'#Google'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 36 | \u001b[39m        expect(googleDiv\u001b[33m.\u001b[39mexists()\u001b[33m,\u001b[39m \u001b[32m\"There should be a div with an id of 'Google'\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m        let googleText \u001b[33m=\u001b[39m googleDiv\u001b[33m.\u001b[39mtext()\u001b[33m.\u001b[39mtrim()\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 | \u001b[39m        expect(googleText\u001b[33m,\u001b[39m \u001b[32m`The text should read '${EXPECTED_TEXT}'. Instead we found ${googleText}`\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[33mEXPECTED_TEXT\u001b[39m\u001b[33m.\u001b[39mtoLowerCase())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:36:84)\u001b[2m\u001b[22m\n","numFailingTests":3,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1556431891700,"start":1556431890207},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":16,"failureMessages":[],"fullName":"exercise1 Application should render without crashing","location":null,"numPassingAsserts":0,"status":"passed","title":"Application should render without crashing"},{"ancestorTitles":["exercise1"],"duration":22,"failureMessages":["Error: There should be a div with an id of 'Tesla'. Did you forget a `return` in your array method?__stacktrace__\n    at Object.toBeTruthy (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/tests/exercises/ex-1.test.js:19:133)\n    at Object.asyncJestTest (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at processTicksAndRejections (internal/process/task_queues.js:86:5)"],"fullName":"exercise1 The first div should say, Tesla makes 140 every year","location":null,"numPassingAsserts":0,"status":"failed","title":"The first div should say, Tesla makes 140 every year"},{"ancestorTitles":["exercise1"],"duration":5,"failureMessages":["Error: There should be a div with an id of 'Microsoft'__stacktrace__\n    at Object.toBeTruthy (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/tests/exercises/ex-1.test.js:27:90)\n    at Object.asyncJestTest (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at processTicksAndRejections (internal/process/task_queues.js:86:5)"],"fullName":"exercise1 The second div should say, Microsoft makes 300 every year","location":null,"numPassingAsserts":0,"status":"failed","title":"The second div should say, Microsoft makes 300 every year"},{"ancestorTitles":["exercise1"],"duration":4,"failureMessages":["Error: There should be a div with an id of 'Google'__stacktrace__\n    at Object.toBeTruthy (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/tests/exercises/ex-1.test.js:36:84)\n    at Object.asyncJestTest (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/jona/Documents/elevation/projects/student-code/react-intro-lesson-exercises/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at processTicksAndRejections (internal/process/task_queues.js:86:5)"],"fullName":"exercise1 The third div should say, Google makes 600 every year","location":null,"numPassingAsserts":0,"status":"failed","title":"The third div should say, Google makes 600 every year"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}